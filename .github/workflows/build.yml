name: Build wheels

on:
  push:
    branches: [master]
    tags: ['*']

jobs:
  build_wheels:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # cibuildwheel builds linux wheels inside a manylinux container
        # it also takes care of procuring the correct python version for us
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [36, 37, 38, 39, 310]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"
      - name: Install cibuildwheel
        run: |
          python -m pip install "cibuildwheel==2.1.3"
      - name: Build wheels
        env:
          CIBW_BUILD: "cp${{ matrix.python-version }}-*"
          CIBW_SKIP: "*-manylinux_i686 *-win32"
          CIBW_BUILD_VERBOSITY: 1
        run: |
          python -m cibuildwheel --output-dir wheelhouse .
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./wheelhouse/*.whl
  build_sdist_python_wheel:
    name: sdist and python wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"
      - name: Run check-manifest
        run: |
          pip install check-manifest
          check-manifest -v
      - name: Build sdist and wheel
        run: |
          pip install --upgrade setuptools pip wheel
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/*.tar.gz
  release:
    name: create release
    needs: [build_wheels, build_sdist_python_wheel]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        # https://github.com/actions/upload-release-asset/issues/47
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs').promises;
            const { repo: { owner, repo }, sha } = context;

            console.log('environment', process.versions);
            console.log({ owner, repo, sha });

            const release = await github.repos.createRelease({
              owner, repo,
              // if GITHUB_REF just appears to be a branch, use tag-{commit} as the tag
              tag_name: process.env.GITHUB_REF.includes("refs/heads/") ? "tag-" + sha : process.env.GITHUB_REF.split("/").pop(),
              target_commitish: sha
            });

            console.log('created release', { release });

            for (let file of await fs.readdir('dist')) {
              console.log('uploading', file);

              await github.repos.uploadReleaseAsset({
                owner, repo,
                release_id: release.data.id,
                name: file,
                data: await fs.readFile(`./dist/${file}`)
              });
            }
